499:2make doc
 in dir /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build (timeout 1200 secs)
 watching logfiles {}
 argv: make doc
 environment:
  HOME=/home/buildslave
  LOGNAME=buildslave
  MAIL=/var/mail/buildslave
  PATH=/home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/venv/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
  PWD=/home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build
  SHELL=/bin/sh
  TERM=xterm
  USER=buildslave
 using PTY: False
,501:0rm -rf doc/build
rm -rf doc/source/generated
cd doc; \
	python make.py clean; \
	python make.py html
Running Sphinx v1.1.3
loading pickled environment... not yet created
[autosummary] generating autosummary for: 10min.rst, api.rst, basics.rst, comparison_with_r.rst, computation.rst, cookbook.rst, dsintro.rst, enhancingperf.rst, faq.rst, gotchas.rst, ..., overview.rst, r_interface.rst, related.rst, release.rst, reshaping.rst, rplot.rst, sparse.rst, timeseries.rst, visualization.rst, whatsnew.rst
,4266:1WARNING: [autosummary] failed to import 'pandas.DataFrame.to_clipboard': no module named pandas.DataFrame.to_clipboard
WARNING: [autosummary] failed to import 'pandas.DataFrame.to_hdf': no module named pandas.DataFrame.to_hdf
WARNING: [autosummary] failed to import 'pandas.DataFrame.to_json': no module named pandas.DataFrame.to_json
WARNING: [autosummary] failed to import 'pandas.DataFrame.to_pickle': no module named pandas.DataFrame.to_pickle
WARNING: [autosummary] failed to import 'pandas.DataFrame.to_stata': no module named pandas.DataFrame.to_stata
WARNING: [autosummary] failed to import 'pandas.Panel.to_clipboard': no module named pandas.Panel.to_clipboard
WARNING: [autosummary] failed to import 'pandas.Panel.to_pickle': no module named pandas.Panel.to_pickle
WARNING: [autosummary] failed to import 'pandas.Panel.update': no module named pandas.Panel.update
WARNING: [autosummary] failed to import 'pandas.Series.to_clipboard': no module named pandas.Series.to_clipboard
WARNING: [autosummary] failed to import 'pandas.Series.to_pickle': no module named pandas.Series.to_pickle
WARNING: [autosummary] failed to import 'pandas.io.excel.ExcelFile.parse': no module named pandas.io.excel.ExcelFile.parse
WARNING: [autosummary] failed to import 'pandas.io.excel.read_excel': no module named pandas.io.excel.read_excel
WARNING: [autosummary] failed to import 'pandas.io.html.read_html': no module named pandas.io.html.read_html
WARNING: [autosummary] failed to import 'pandas.io.json.read_json': no module named pandas.io.json.read_json
WARNING: [autosummary] failed to import 'pandas.io.pickle.read_pickle': no module named pandas.io.pickle.read_pickle
WARNING: [autosummary] failed to import 'pandas.io.pytables.read_hdf': no module named pandas.io.pytables.read_hdf
WARNING: [autosummary] failed to import 'pandas.io.sql.read_sql': no module named pandas.io.sql.read_sql
WARNING: [autosummary] failed to import 'pandas.io.stata.StataReader.data': no module named pandas.io.stata.StataReader.data
WARNING: [autosummary] failed to import 'pandas.io.stata.StataReader.data_label': no module named pandas.io.stata.StataReader.data_label
WARNING: [autosummary] failed to import 'pandas.io.stata.StataReader.value_labels': no module named pandas.io.stata.StataReader.value_labels
WARNING: [autosummary] failed to import 'pandas.io.stata.StataReader.variable_labels': no module named pandas.io.stata.StataReader.variable_labels
WARNING: [autosummary] failed to import 'pandas.io.stata.StataWriter.write_file': no module named pandas.io.stata.StataWriter.write_file
WARNING: [autosummary] failed to import 'pandas.io.stata.read_stata': no module named pandas.io.stata.read_stata
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_apply': no module named pandas.stats.moments.expanding_apply
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_corr': no module named pandas.stats.moments.expanding_corr
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_count': no module named pandas.stats.moments.expanding_count
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_cov': no module named pandas.stats.moments.expanding_cov
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_kurt': no module named pandas.stats.moments.expanding_kurt
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_mean': no module named pandas.stats.moments.expanding_mean
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_median': no module named pandas.stats.moments.expanding_median
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_quantile': no module named pandas.stats.moments.expanding_quantile
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_skew': no module named pandas.stats.moments.expanding_skew
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_std': no module named pandas.stats.moments.expanding_std
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_sum': no module named pandas.stats.moments.expanding_sum
WARNING: [autosummary] failed to import 'pandas.stats.moments.expanding_var': no module named pandas.stats.moments.expanding_var
,10001:0[autosummary] generating autosummary for: /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.T.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.__init__.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.__iter__.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.abs.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.add.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.add_prefix.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.add_suffix.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.align.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.any.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.DataFrame.append.rst, ..., /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.stats.moments.rolling_median.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.stats.moments.rolling_quantile.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.stats.moments.rolling_skew.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.stats.moments.rolling_std.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.stats.moments.rolling_sum.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.stats.moments.rolling_var.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.tools.merge.concat.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.tools.merge.merge.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.tools.pivot.pivot_table.rst, /home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/source/generated/pandas.tseries.tools.to_datetime.rst
loading intersphinx inventory from http://statsmodels.sourceforge.net/devel/objects.inv...
loading intersphinx inventory from http://docs.python.org/objects.inv...
building [html]: targets for 27 source files that are out of date
updating environment: 356 added, 0 changed, 0 removed
reading sources... [  0%] 10min
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-982c2f90cfe3> in <module>()
----> 1 options.display.mpl_style='default'

NameError: name 'options' is not defined
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-24-4ef08690a969> in <module>()
----> 1 df.loc[dates[0]]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-25-cd5bc7d72ed2> in <module>()
----> 1 df.loc[:,['A','B']]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-26-22041a2bf8aa> in <module>()
----> 1 df.loc['20130102':'20130104',['A','B']]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-27-b199483f48fb> in <module>()
----> 1 df.loc['20130102',['A','B']]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-28-0a33bf77495d> in <module>()
----> 1 df.loc[dates[0],'A']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-29-be2879340d79> in <module>()
----> 1 df.at[dates[0],'A']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'at'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-30-fd597f399a3f> in <module>()
----> 1 df.iloc[3]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-31-237bcf6d71f7> in <module>()
----> 1 df.iloc[3:5,0:2]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-32-af7ea448332b> in <module>()
----> 1 df.iloc[[1,2,4],[0,2]]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-33-29395a32b3d3> in <module>()
----> 1 df.iloc[1:3,:]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-34-829863b05efe> in <module>()
----> 1 df.iloc[:,1:3]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-35-6d8ed51ed5a1> in <module>()
----> 1 df.iloc[1,1]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' objec,914:0t has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-36-6a693d9a204c> in <module>()
----> 1 df.iat[1,1]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iat'
---------------------------------------------------------------------------
AttributeError                     ,4720:0       Traceback (most recent call last)
<ipython-input-45-38ba9395ef20> in <module>()
----> 1 df.at[dates[0],'A'] = 0

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'at'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-46-8ac2bd2d2bff> in <module>()
----> 1 df.iat[0,1] = 0

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iat'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-47-ffc01edd5e63> in <module>()
----> 1 df.loc[:,'D'] = np.array([5] * len(df))

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-53-fdda4f9fa09c> in <module>()
----> 1 df1.loc[dates[0]:dates[1],'E'] = 1

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-81-c78f75e29d3c> in <module>()
----> 1 s = df.iloc[3]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-118-982c2f90cfe3> in <module>()
----> 1 options.display.mpl_style='default'

NameError: name 'options' is not defined
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-126-e0d33f283556> in <module>()
----> 1 df.to_hdf('foo.h5','df')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'to_hdf'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-127-0004e65d59e6> in <module>()
----> 1 read_hdf('foo.h5','df')

NameError: name 'read_hdf' is not defined
---------------------------------------------------------------------------
OSError                                   Traceback (most recent call last)
<ipython-input-128-78a8feebe7a2> in <module>()
----> 1 os.remove('foo.h5')

OSError: [Errno 2] No such file or directory: 'foo.h5'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-129-8584174256b2> in <module>()
----> 1 read_excel('foo.xlsx', 'sheet1', index_col=None, na_values=['NA'])

NameError: name 'read_excel' is not defined
reading sources... [  0%] api
,169:1/home/buildslave/nd-bb-slave-sparc-sid/pandas-doc-builder/build/doc/sphinxext/docscrape.py:117: UserWarning: Unknown section Example
  warn("Unknown section %s" % key)
,10001:0reading sources... [  0%] basics
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-164-2109499c65fb> in <module>()
----> 1 s4.str.contains('A', na=False)

TypeError: contains() got an unexpected keyword argument 'na'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-201-c2a4f9f23bd8> in <module>()
----> 1 df3.convert_objects(convert_numeric=True).dtypes

TypeError: convert_objects() got an unexpected keyword argument 'convert_numeric'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-207-b962b638ac86> in <module>()
----> 1 s.convert_objects(convert_dates='coerce')

AttributeError: 'Series' object has no attribute 'convert_objects'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-214-743cac99f302> in <module>()
----> 1 casted.dtypes

AttributeError: 'numpy.ndarray' object has no attribute 'dtypes'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-220-743cac99f302> in <module>()
----> 1 casted.dtypes

AttributeError: 'numpy.ndarray' object has no attribute 'dtypes'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-222-f4173ac40179> in <module>()
----> 1 pd.options.display.max_rows

AttributeError: 'module' object has no attribute 'options'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-223-28d829398f6c> in <module>()
----> 1 pd.options.display.max_rows = 999

AttributeError: 'module' object has no attribute 'options'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-224-f4173ac40179> in <module>()
----> 1 pd.options.display.max_rows

AttributeError: 'module' object has no attribute 'options'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-225-3727798db58f> in <module>()
----> 1 get_option("display.max_rows")

NameError: name 'get_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-226-e3e94f0b6c29> in <module>()
----> 1 set_option("display.max_rows",101)

NameError: name 'set_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-227-3727798db58f> in <module>()
----> 1 get_option("display.max_rows")

NameError: name 'get_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-228-ac1ababe27d7> in <module>()
----> 1 set_option("max_r",102)

NameError: name 'set_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-229-3727798db58f> in <module>()
----> 1 get_option("display.max_rows")

NameError: name 'get_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-231-b522005e463d> in <module>()
----> 1 describe_option()

NameError: name 'describe_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-232-6caa7ed37511> in <module>()
----> 1 describe_option("date")

NameError: name 'describe_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-233-1dcf4823344f> in <module>()
----> 1 reset_option("display.max_rows")

NameError: name 'reset_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-233-3727798db58f> in <module>()
----> 1 get_option("display.max_rows")

NameError: name 'get_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-234-8c2508f88471> in <module>()
----> 1 set_option("display.max_rows",999)

NameError: name 'set_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-235-3727798db58f> in <module>()
----> 1 get_option("display.max_rows")

NameError: name 'get_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-236-1dcf4823344f> in <module>()
----> 1 reset_option("display.max_rows")

NameError: name 'reset_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-237-3727798db58f> in <module>()
----> 1 get_option("display.max_rows")

NameError: name 'get_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-238-8388ee170548> in <module>()
----> 1 reset_option("^display\.")

NameError: name 'reset_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-243-4da03579a4e9> in <module>()
----> 1 reset_option('^display\.')

NameError: name 'reset_option' is not defined
reading sources... [  1%] comparison_with_r
reading sources... [  1%] computation
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-982c2f90cfe3> in <module>()
----> 1 options.display.mpl_style='default'

NameError: name 'options' is not defined
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-2-e6495a692788> in <module>()
----> 1 ser.pct_change()

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_heade,4970:0r = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(len(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-4-7502eb534914> in <module>()
----> 1 df.pct_change(periods=3)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/py,10001:0modules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-14-66ae2727460f> in <module>()
----> 1 frame.cov(min_periods=12)

TypeError: cov() got an unexpected keyword argument 'min_periods'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-24-ddd91541fe54> in <module>()
----> 1 frame.corr(min_periods=12)

TypeError: corr() got an unexpected keyword argument 'min_periods'
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-30-995d12fc3402> in <module>()
----> 1 df2.corrwith(df1, axis=1)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_header = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(len(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-36-7ed0097d7e9e> in <module>()
----> 1 df

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_print,6385:0ers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-37-0f365c4bec6a> in <module>()
----> 1 df.rank(1)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
   ,10001:0 481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-48-3b88bf115a6d> in <module>()
----> 1 rolling_window(ser, 5, 'triang')

NameError: name 'rolling_window' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-49-7c146141600d> in <module>()
----> 1 rolling_window(ser, 5, 'boxcar')

NameError: name 'rolling_window' is not defined
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-50-ed73e9ed398f> in <module>()
----> 1 rolling_mean(ser, 5)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_header = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(len(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-51-4ff400ba8b13> in <module>()
----> 1 rolling_window(ser, 5, 'gaussian', std=0.1)

NameError: name 'rolling_window' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-52-7c146141600d> in <module>()
----> 1 rolling_window(ser, 5, 'boxcar')

NameError: name 'rolling_window' is not defined
---------------------------------------------------------------------------
NameError       ,6385:0                          Traceback (most recent call last)
<ipython-input-53-15b3ccc56252> in <module>()
----> 1 rolling_window(ser, 5, 'boxcar', center=True)

NameError: name 'rolling_window' is not defined
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-54-2e56bbf5bbc2> in <module>()
----> 1 rolling_mean(ser, 5, center=True)

/usr/lib/pymodules/python2.7/pandas/stats/moments.pyc in f(arg, window, min_periods, freq, time_rule, **kwargs)
    397             return func(arg, window, minp, **kwds)
    398         return _rolling_moment(arg, window, call_cython, min_periods,
--> 399                                freq=freq, time_rule=time_rule, **kwargs)
    400 
    401     return f

/usr/lib/pymodules/python2.7/pandas/stats/moments.pyc in _rolling_moment(arg, window, func, minp, axis, freq, time_rule, **kwargs)
    227     return_hook, values = _process_data_structure(arg)
    228     # actually calculate the moment. Faster way to do this?
--> 229     result = np.apply_along_axis(calc, axis, values)
    230 
    231     return return_hook(result)

/usr/lib/pymodules/python2.7/numpy/lib/shape_base.pyc in apply_along_axis(func1d, axis, arr, *args)
     78     outshape = asarray(arr.shape).take(indlist)
     79     i.put(indlist, ind)
---> 80     res = func1d(arr[tuple(i.tolist())],*args)
     81     #  if res is a number, then we have a smaller output array
     82     if isscalar(res):

/usr/lib/pymodules/python2.7/pandas/stats/moments.pyc in <lambda>(x)
    224     """
    225     arg = _conv_timerule(arg, freq, time_rule)
--> 226     calc = lambda x: func(x, window, minp=minp, **kwargs)
    227     return_hook, values = _process_data_structure(arg)
    228     # actually calculate the moment. Faster way to do this?

/usr/lib/pymodules/python2.7/pandas/stats/moments.pyc in call_cython(arg, window, minp, **kwds)
    395         def call_cython(arg, window, minp, **kwds):
    396             minp = check_minp(minp, window)
--> 397             return func(arg, window, minp, **kwds)
    398         return _rolling_moment(arg, window, call_cython, min_periods,
    399                                freq=freq, time_rule=time_rule, **kwargs)

/usr/lib/pymodules/python2.7/pandas/lib.so in pandas.lib.roll_mean (pandas/src/tseries.c:66707)()

TypeError: roll_mean() got an unexpected keyword argument 'center'
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-56-d5e21c69ab19> in <module>()
----> 1 rolling_corr(df2, df2['B'], window=5)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.,10001:0pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-61-b65482a00197> in <module>()
----> 1 expanding_mean(df)[:5]

NameError: name 'expanding_mean' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-63-60ec2ed90e7d> in <module>()
----> 1 expanding_mean(ts).plot(style='k')

NameError: name 'expanding_mean' is not defined
reading sources... [  1%] cookbook
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-4-12a2a88a0479> in <module>()
----> 1 store.get_storer('df').attrs.my_attribute = dict(A = 10)

AttributeError: 'HDFStore' object has no attribute 'get_storer'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-5-bac831420a02> in <module>()
----> 1 store.get_storer('df').attrs.my_attribute

AttributeError: 'HDFStore' object has no attribute 'get_storer'
---------------------------------------------------------------------------
Exception                                 Traceback (most recent call last)
<ipython-input-10-565525e4810f> in <module>()
----> 1 df2.sum(axis='myaxis2')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in sum(self, axis, numeric_only, skipna, level)
   4137                                       skipna=skipna)
   4138         return self._reduce(nanops.nansum, axis=axis, skipna=skipna,
-> 4139                             numeric_only=numeric_only)
   4140 
   4141     @Substitution(name='mean', shortname='mean', na_action=_doc_exclude_na,

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _reduce(self, op, axis, skipna, numeric_only, filter_type, **kwds)
   4258                 filter_type=None, **kwds):
   4259         f = lambda x: op(x, axis=axis, skipna=skipna, **kwds)
-> 4260         labels = self._get_agg_axis(axis)
   4261         if numeric_only is None:
   4262             try:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _get_agg_axis(self, axis_num)
   4352             return self.index
   4353         else:
-> 4354             raise Exception('Must have 0<= axis <= 1')
   4355 
   4356     def _get_numeric_data(self):

Exception: Must have 0<= axis <= 1
reading sources... [  1%] dsintro
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-6217c05fe0dc> in <module>()
----> 1 set_option('display.precision', 4, 'display.max_columns', 8)

NameError: name 'set_option' is not defined
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-10-cbd7b0765f0f> in <module>()
----> 1 Series(d, index=['b', 'c', 'd', 'a'])

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_header = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(len(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-27-239f4724a38b> in <module>()
----> 1 ,10001:0s[1:] + s[:-1]

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_header = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(len(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-33-7ed0097d7e9e> in <module>()
----> 1 df

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOpera,10001:0tion,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-34-09c5e4f0c113> in <module>()
----> 1 DataFrame(d, index=['d', 'b', 'a'])

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-35-ef413eb1a2cc> in <module>()
----> 1 DataFrame(d, index=['d', 'b', 'a'], columns=['two', 'three'])

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254       ,10001:0                      na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-47-808e4b923b66> in <module>()
----> 1 DataFrame(data2)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-48-893809a92d17> in <module>()
----> 1 DataFrame(data2, index=['first', 'second'])

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/fram,5240:0e.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-54-21dad543422a> in <module>()
----> 1 df['one']

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480  ,10001:0       p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_header = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(len(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-57-7ed0097d7e9e> in <module>()
----> 1 df

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-60-7ed0097d7e9e> in <module>()
----> 1 df

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
 ,10001:0   445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-62-7ed0097d7e9e> in <module>()
----> 1 df

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
-------------,10001:0--------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-64-7ed0097d7e9e> in <module>()
----> 1 df

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-66-7ed0097d7e9e> in <module>()
----> 1 df

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits -,2769:0 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-67-a9892ed80b8c> in <module>()
----> 1 df.loc['b']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-68-55510a4bfc0e> in <module>()
----> 1 df.iloc[2]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-71-0f3d7b3a4301> in <module>()
----> 1 df + df2

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237         ,10001:0    self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-72-6236dc68bbe4> in <module>()
----> 1 df - df.iloc[0]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-93-fc045542f1ea> in <module>()
----> 1 pd.set_option('display.max_rows', 5)

AttributeError: 'module' object has no attribute 'set_option'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-95-722dac93a22d> in <module>()
----> 1 pd.reset_option('^display\.')

AttributeError: 'module' object has no attribute 'reset_option'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-95-073c298674e9> in <module>()
----> 1 print baseball.iloc[-20:, :12].to_string()

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-97-6213f3e0863d> in <module>()
----> 1 set_option('line_width', 40) # default is 80

NameError: name 'set_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-99-4bbeed68d555> in <module>()
----> 1 reset_option('line_width')

NameError: name 'reset_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-99-1e48ba4e9bf0> in <module>()
----> 1 set_option('expand_frame_repr', False)

NameError: name 'set_option' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-101-cf803550ff32> in <module>()
----> 1 reset_option('expand_frame_repr')

NameError: name 'reset_option' is not defined
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-126-135043e6a3f6> in <module>()
----> 1 wp.reindex(items=['Item1']).squeeze()

/usr/lib/pymodules/python2.7/pandas/core/panel.pyc in __getattr__(self, name)
    570             return self[name]
    571         raise AttributeError("'%s' object has no attribute '%s'" %
--> 572                              (type(self).__name__, name))
    573 
    574     def _slice(self, slobj, axis=0):

AttributeError: 'Panel' object has no attribute 'squeeze'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-127-2ead359c847c> in <module>()
----> 1 wp.reindex(items=['Item1'],minor=['B']).squeeze()

/usr/lib/pymodules/python2.7/pandas/core/panel.pyc in __getattr__(self, name)
    570             return self[name]
    571         raise AttributeError("'%s' object has no attribute '%s'" %
--> 572                              (type(self).__name__, name))
    573 
    574     def _slice(self, slobj, axis=0):

AttributeError: 'Panel' object has no attribute 'squeeze'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-130-3bc87b4448d8> in <module>()
----> 1 p4d = Panel4D(randn(2, 2, 5, 4),
      2            labels=['Label1','Label2'],
      3            items=['Item1', 'Item2'],
      4            major_axis=date_range('1/1/2000', periods=5),
      5            minor_axis=['A', 'B', 'C', 'D'])

NameError: name 'Panel4D' is not defined
--------------------------,4271:0-------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-131-98c8940ef9f5> in <module>()
----> 1 p4d

NameError: name 'p4d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-133-b911f1b5cc1a> in <module>()
----> 1 Panel4D(data)

NameError: name 'Panel4D' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-134-a79d2a225b8c> in <module>()
----> 1 p4d['Label1']

NameError: name 'p4d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-135-4459efcd700c> in <module>()
----> 1 p4d.ix[:,:,:,'A']

NameError: name 'p4d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-136-4147e38ab9bb> in <module>()
----> 1 p4d.ix[:,:,0,'A']

NameError: name 'p4d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-137-bb4900e0665b> in <module>()
----> 1 p4d.ix[:,0,0,'A']

NameError: name 'p4d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-138-ba7cc53bead1> in <module>()
----> 1 p4d.transpose(3, 2, 1, 0)

NameError: name 'p4d' is not defined
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
<ipython-input-139-88fbf97e7001> in <module>()
----> 1 from pandas.core import panelnd

ImportError: cannot import name panelnd
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-140-ab39282b2a07> in <module>()
----> 1 Panel5D = panelnd.create_nd_panel_factory(
      2     klass_name   = 'Panel5D',
      3     axis_orders  = [ 'cool', 'labels','items','major_axis','minor_axis'],
      4     axis_slices  = { 'labels' : 'labels', 'items' : 'items',
      5                      'major_axis' : 'major_axis', 'minor_axis' : 'minor_axis' },

NameError: name 'panelnd' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-141-be868dbe3426> in <module>()
----> 1 p5d = Panel5D(dict(C1 = p4d))

NameError: name 'Panel5D' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-142-df8e635e5fcc> in <module>()
----> 1 p5d

NameError: name 'p5d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-143-5abb6fef19fc> in <module>()
----> 1 p5d.ix['C1',:,:,0:3,:]

NameError: name 'p5d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-144-ecff79dab06a> in <module>()
----> 1 p5d.transpose(1,2,3,4,0)

NameError: name 'p5d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-145-034af48c6ba1> in <module>()
----> 1 p5d.shape

NameError: name 'p5d' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-146-e0241d34e303> in <module>()
----> 1 p5d.ndim

NameError: name 'p5d' is not defined
reading sources... [  2%] enhancingperf
,1779:1In file included from /usr/lib/pymodules/python2.7/numpy/core/include/numpy/ndarraytypes.h:1728:0,
                 from /usr/lib/pymodules/python2.7/numpy/core/include/numpy/ndarrayobject.h:17,
                 from /usr/lib/pymodules/python2.7/numpy/core/include/numpy/arrayobject.h:15,
                 from /home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.c:314:
/usr/lib/pymodules/python2.7/numpy/core/include/numpy/npy_deprecated_api.h:11:2: warning: #warning "Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
/usr/lib/pymodules/python2.7/numpy/core/include/numpy/__multiarray_api.h:1594:1: warning: '_import_array' defined but not used [-Wunused-function]
/usr/lib/pymodules/python2.7/numpy/core/include/numpy/__ufunc_api.h:236:1: warning: '_import_umath' defined but not used [-Wunused-function]
In file included from /usr/lib/pymodules/python2.7/numpy/core/include/numpy/ndarraytypes.h:1728:0,
                 from /usr/lib/pymodules/python2.7/numpy/core/include/numpy/ndarrayobject.h:17,
                 from /usr/lib/pymodules/python2.7/numpy/core/include/numpy/arrayobject.h:15,
                 from /home/buildslave/.ipython/cython/_cython_magic_0e4e3472f72e83ac095c20564334d2ef.c:314:
/usr/lib/pymodules/python2.7/numpy/core/include/numpy/npy_deprecated_api.h:11:2: warning: #warning "Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
/usr/lib/pymodules/python2.7/numpy/core/include/numpy/__multiarray_api.h:1594:1: warning: '_import_array' defined but not used [-Wunused-function]
/usr/lib/pymodules/python2.7/numpy/core/include/numpy/__ufunc_api.h:236:1: warning: '_import_umath' defined but not used [-Wunused-function]
,10001:0---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
<ipython-input-14-f49f5f515828> in <module>()
----> 1 get_ipython().magic(u"timeit apply_integrate_f(df['a'], df['b'], df['N'])")

/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s)
   2134         magic_name, _, magic_arg_s = arg_s.partition(' ')
   2135         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)
-> 2136         return self.run_line_magic(magic_name, magic_arg_s)
   2137 
   2138     #-------------------------------------------------------------------------

/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)
   2060                 args.append(sys._getframe(stack_depth).f_locals)
   2061             with self.builtin_trap:
-> 2062                 result = fn(*args)
   2063             return result
   2064 

/usr/lib/python2.7/dist-packages/IPython/core/magics/execution.pyc in timeit(self, line, cell)

/usr/lib/python2.7/dist-packages/IPython/core/magic.pyc in <lambda>(f, *a, **k)
    189     # but it's overkill for just that one bit of state.
    190     def magic_deco(arg):
--> 191         call = lambda f, *a, **k: f(*a, **k)
    192 
    193         if callable(arg):

/usr/lib/python2.7/dist-packages/IPython/core/magics/execution.pyc in timeit(self, line, cell)
    804             number = 1
    805             for i in range(1, 10):
--> 806                 if timer.timeit(number) >= 0.2:
    807                     break
    808                 number *= 10

/usr/lib/python2.7/timeit.pyc in timeit(self, number)
    193         gc.disable()
    194         try:
--> 195             timing = self.inner(it, self.timer)
    196         finally:
    197             if gcold:

<magic-timeit> in inner(_it, _timer)

/home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.so in _cython_magic_605a831e8b94d62e4ed947aeaccb08d1.apply_integrate_f (/home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.c:1801)()

/home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.so in _cython_magic_605a831e8b94d62e4ed947aeaccb08d1.apply_integrate_f (/home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.c:1564)()

AssertionError: 
---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
<ipython-input-15-a1290cd1995f> in <module>()
----> 1 get_ipython().magic(u"prun -l 4 apply_integrate_f(df['a'], df['b'], df['N'])")

/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s)
   2134         magic_name, _, magic_arg_s = arg_s.partition(' ')
   2135         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)
-> 2136         return self.run_line_magic(magic_name, magic_arg_s)
   2137 
   2138     #-------------------------------------------------------------------------

/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)
   2060                 args.append(sys._getframe(stack_depth).f_locals)
   2061             with self.builtin_trap:
-> 2062                 result = fn(*args)
   2063             return result
   2064 

/usr/lib/python2.7/dist-packages/IPython/core/magics/execution.pyc in prun(self, parameter_s, cell, user_mode, opts, arg_lst, prog_ns)

/usr/lib/python2.7/dist-packages/IPython/core/magic.pyc in <lambda>(f, *a, **k)
    189     # but it's overkill for just that one bit of state.
    190     def magic_deco(arg):
--> 191         call = lambda f, *a, **k: f(*a, **k)
    192 
    193         if callable(arg):

/usr/lib/python2.7/dist-packages/IPython/core/magics/execution.pyc in prun(self, parameter_s, cell, user_mode, opts, arg_lst, prog_ns)
    206         prof = profile.Profile()
    207         try:
--> 208             prof = prof.runctx(arg_str,namespace,namespace)
    209             sys_exit = ''
    210         except SystemExit:

/usr/lib/python2.7/cProfile.pyc in runctx(self, cmd, globals, locals)
    138         self.enable()
    139         try:
--> 140             exec cmd in globals, locals
    141         finally:
    142             self.disable()

<string> in <module>()

/home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.so in _cython_magic_605a831e8b94d62e4ed947aeaccb08d1.apply_integrate_f (/home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.c:1801)()

/home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.so in _cython_magic_605a831e8b94d62e4ed947aeaccb08d1.apply_integrate_f (/home/buildslave/.ipython/cython/_cython_magic_605a831e8b94d62e4ed947aeaccb08d1.c:1564)()

AssertionError: 
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-17-9a00ec50b66e> in <module>()
----> 1 get_ipython().magic(u"timeit apply_integrate_f_wrap(df['a'], df['b'], df['N'])")

/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s)
   2134         magic_name, _, magic_arg_s = arg_s.partition(' ')
   2135         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)
-> 2136         return self.run_line_magic(magic_name, magic_arg_s)
   2137 
   2138     #-------------------------------------------------------------------------

/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)
   2060                 args.append(sys._getframe(stack_depth).f_locals)
   2061             with self.builtin_trap:
-> 2062                 result = fn(*args)
   2063             return result
   2064 

/usr/lib/python2.7/dist-packages/IPython/core/magics/execution.pyc in timeit(self, line, cell)

/usr/lib/python2.7/dist-packages/IPython/core/magic.pyc in <lambda>(f, *a, **k)
    189     # but it's overkill for just that one bit of state.
    190     def magic_deco(arg):
--> 191         call = lambda f, *a, **k: f(*a, **k)
    192 
    193         if callable(arg):

/usr/lib/python2.7/dist-packages/IPython/core/magics/execution.pyc in timeit(self, line, cell)
    804             number = 1
    805             for i in range(1, 10):
--> 806                 if timer.timeit(number) >= 0.2:
    807                     break
    808                 number *= 10

/usr/lib/python2.7/timeit.pyc in timeit(self, number)
    193         gc.disable()
    194         try:
--> 195             timing = self.inner(it, self.timer)
    196         finally:
    197             if gcold:

<magic-timeit> in inner(_it, _timer)

/home/buildslave/.ipython/cython/_cython_magic_0e4e3472f72e83ac095c20564334d2ef.so in _cython_magic_0e4e3472f72e83ac095c20564334d2ef.apply_integrate_f_wrap (/home/buildslave/.ipython/cython/_cython_magic_0e4e3472f72e83ac095c20564334d2ef.c:1762)()

ValueError: Buffer dtype mismatch, expected 'Py_ssize_t' but got 'long long'
reading sources... [  2%] faq
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-982c2f90cfe3> in <module>()
----> 1 options.display.mpl_style='default'

NameError: name 'options' is not defined
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
<ipython-input-17-a44de061a6d8> in <module>()
----> 1 import scikits.timeseries as ts

ImportError: No module named scikits.timeseries
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-18-c16b12c482e8> in <module>()
----> 1 data = ts.time_series(np.random.randn(50), start_date='Jan-2000', freq='M')

AttributeError: 'TimeSeries' object has no attribute 'time_series'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-20-42ee10087ca8> in <module>()
----> 1 data.convert('A', func=np.mean)

AttributeError: 'dict' object has no attribute 'convert'
reading sources... [  2%] generated/pandas.DataFrame.T
reading sources... [  3%] generated/pandas.DataFrame.__init__
reading sources... [  3%] generated/pandas.DataFrame.__iter__
reading sources... [  3%] generated/pandas.DataFrame.abs
reading sources... [  3%] generated/pandas.DataFrame.add
reading sources... [  4%] generated/pandas.DataFrame.add_prefix
reading sources... [  4%] generated/pandas.DataFrame.add_suffix
reading sources... [  4%] generated/pandas.DataFrame.align
reading sources... [  5%] generated/pandas.DataFrame.any
reading sources... [  5%] generated/pandas.DataFrame.append
reading sources... [  5%] generated/pandas.DataFrame.apply
reading sources... [  5%] generated/pandas.DataFrame.applymap
reading sources... [  6%] generated/pandas.DataFrame.as_matrix
reading sources... [  6%] generated/pandas.DataFrame.asfreq
reading sources... [  6%] generated/pandas.DataFrame.astype
reading sources... [  7%] generated/pandas.DataFrame.axes
reading sources... [  7%] generated/pandas.DataFrame.boxplot
reading sources... [  7%] generated/pandas.DataFrame.clip
reading sources... [  7%] generated/pandas.DataFrame.clip_lower
reading sources... [  8%] generated/pandas.DataFrame.clip_upper
reading sources... [  8%] generated/pandas.DataFrame.combine
reading sources... [  8%] generated/pandas.DataFrame.combineAdd
reading sources... [  8%] generated/pandas.DataFrame.combineMult
reading sources... [  9%] generated/pandas.DataFrame.combine_first
reading sources... [  9%] generated/pandas.DataFrame.convert_objects
reading sources... [  9%] generated/pandas.DataFrame.copy
reading sources... [ 10%] genera,507:0ted/pandas.DataFrame.corr
reading sources... [ 10%] generated/pandas.DataFrame.corrwith
reading sources... [ 10%] generated/pandas.DataFrame.count
reading sources... [ 10%] generated/pandas.DataFrame.cov
reading sources... [ 11%] generated/pandas.DataFrame.cummax
reading sources... [ 11%] generated/pandas.DataFrame.cummin
reading sources... [ 11%] generated/pandas.DataFrame.cumprod
reading sources... [ 12%] generated/pandas.DataFrame.cumsum
reading sources... [ 12%] generated/pandas.DataFrame.delevel
,10001:0reading sources... [ 12%] generated/pandas.DataFrame.describe
reading sources... [ 12%] generated/pandas.DataFrame.diff
reading sources... [ 13%] generated/pandas.DataFrame.div
reading sources... [ 13%] generated/pandas.DataFrame.drop
reading sources... [ 13%] generated/pandas.DataFrame.drop_duplicates
reading sources... [ 14%] generated/pandas.DataFrame.dropna
reading sources... [ 14%] generated/pandas.DataFrame.dtypes
reading sources... [ 14%] generated/pandas.DataFrame.duplicated
reading sources... [ 14%] generated/pandas.DataFrame.fillna
reading sources... [ 15%] generated/pandas.DataFrame.filter
reading sources... [ 15%] generated/pandas.DataFrame.first
reading sources... [ 15%] generated/pandas.DataFrame.first_valid_index
reading sources... [ 16%] generated/pandas.DataFrame.from_csv
reading sources... [ 16%] generated/pandas.DataFrame.from_dict
reading sources... [ 16%] generated/pandas.DataFrame.from_items
reading sources... [ 16%] generated/pandas.DataFrame.from_records
reading sources... [ 17%] generated/pandas.DataFrame.get_dtype_counts
reading sources... [ 17%] generated/pandas.DataFrame.groupby
reading sources... [ 17%] generated/pandas.DataFrame.head
reading sources... [ 17%] generated/pandas.DataFrame.hist
reading sources... [ 18%] generated/pandas.DataFrame.idxmax
reading sources... [ 18%] generated/pandas.DataFrame.idxmin
reading sources... [ 18%] generated/pandas.DataFrame.info
reading sources... [ 19%] generated/pandas.DataFrame.insert
reading sources... [ 19%] generated/pandas.DataFrame.iteritems
reading sources... [ 19%] generated/pandas.DataFrame.iterrows
reading sources... [ 19%] generated/pandas.DataFrame.itertuples
reading sources... [ 20%] generated/pandas.DataFrame.ix
reading sources... [ 20%] generated/pandas.DataFrame.join
reading sources... [ 20%] generated/pandas.DataFrame.kurt
reading sources... [ 21%] generated/pandas.DataFrame.last
reading sources... [ 21%] generated/pandas.DataFrame.last_valid_index
reading sources... [ 21%] generated/pandas.DataFrame.lookup
reading sources... [ 21%] generated/pandas.DataFrame.mad
reading sources... [ 22%] generated/pandas.DataFrame.max
reading sources... [ 22%] generated/pandas.DataFrame.mean
reading sources... [ 22%] generated/pandas.DataFrame.median
reading sources... [ 23%] generated/pandas.DataFrame.merge
reading sources... [ 23%] generated/pandas.DataFrame.min
reading sources... [ 23%] generated/pandas.DataFrame.mul
reading sources... [ 23%] generated/pandas.DataFrame.ndim
reading sources... [ 24%] generated/pandas.DataFrame.pct_change
reading sources... [ 24%] generated/pandas.DataFrame.pivot
reading sources... [ 24%] generated/pandas.DataFrame.plot
reading sources... [ 25%] generated/pandas.DataFrame.pop
reading sources... [ 25%] generated/pandas.DataFrame.prod
reading sources... [ 25%] generated/pandas.DataFrame.quantile
reading sources... [ 25%] generated/pandas.DataFrame.radd
reading sources... [ 26%] generated/pandas.DataFrame.rank
reading sources... [ 26%] generated/pandas.DataFrame.rdiv
reading sources... [ 26%] generated/pandas.DataFrame.reindex
reading sources... [ 26%] generated/pandas.DataFrame.reindex_axis
reading sources... [ 27%] generated/pandas.DataFrame.reindex_like
reading sources... [ 27%] generated/pandas.DataFrame.rename
reading sources... [ 27%] generated/pandas.DataFrame.reorder_levels
reading sources... [ 28%] generated/pandas.DataFrame.replace
reading sources... [ 28%] generated/pandas.DataFrame.resample
reading sources... [ 28%] generated/pandas.DataFrame.reset_index
reading sources... [ 28%] generated/pandas.DataFrame.rmul
reading sources... [ 29%] generated/pandas.DataFrame.rsub
reading sources... [ 29%] generated/pandas.DataFrame.select
reading sources... [ 29%] generated/pandas.DataFrame.set_index
reading sources... [ 30%] generated/pandas.DataFrame.shape
reading sources... [ 30%] generated/pandas.DataFrame.shift
reading sources... [ 30%] generated/pandas.DataFrame.skew
reading sources... [ 30%] generated/pandas.DataFrame.sort
reading sources... [ 31%] generated/pandas.DataFrame.sort_index
reading sources... [ 31%] generated/pandas.DataFrame.sortlevel
reading sources... [ 31%] generated/pandas.DataFrame.stack
reading sources... [ 32%] generated/pandas.DataFrame.std
reading sources... [ 32%] generated/pandas.DataFrame.sub
reading sources... [ 32%] generated/pandas.DataFrame.sum
reading sources... [ 32%] generated/pandas.DataFrame.swaplevel
reading sources... [ 33%] generated/pandas.DataFrame.tail
reading sources... [ 33%] generated/pandas.DataFrame.take
reading sources... [ 33%] generated/pandas.DataFrame.to_csv
reading sources... [ 33%] generated/pandas.DataFrame.to_dict
reading sources... [ 34%] generated/pandas.DataFrame.to_excel
reading sources... [ 34%] generated/pandas.DataFrame.to_html
reading sources... [ 34%] generated/pandas.DataFrame.to_panel
reading sources... [ 35%] generated/pandas.DataFrame.to_period
reading sources... [ 35%] generated/pandas.DataFrame.to_records
reading sources... [ 35%] generated/pandas.DataFrame.to_sparse
reading sources... [ 35%] generated/pandas.DataFrame.to_string
reading sources... [ 36%] generated/pandas.DataFrame.to_timestamp
reading sources... [ 36%] generated/pandas.DataFrame.transpose
reading sources... [ 36%] generated/pandas.DataFrame.truncate
reading sources... [ 37%] generated/pandas.DataFrame.tz_convert
reading sources... [ 37%] generated/pandas.DataFrame.tz_localize
reading sources... [ 37%] generated/pandas.DataFrame.unstack
reading sources... [ 37%] generated/pandas.DataFrame.update
reading sources... [ 38%] generated/pandas.DataFrame.values
reading sources... [ 38%] generated/pandas.DataFrame.var
reading sources... [ 38%] generated/pandas.DataFrame.xs
reading sources... [ 39%] generated/pandas.Panel.__init__
reading sources... [ 39%] generated/pandas.Panel.__iter__
reading sources... [ 39%] generated/pandas.Panel.abs
reading sources... [ 39%] generated/pandas.Panel.add
reading sources... [ 40%] generated/pandas.Panel.add_prefix
reading sources... [ 40%] generated/pandas.Panel.add_suffix
reading sources... [ 40%] generated/pandas.Panel.apply
reading sources... [ 41%] generated/pandas.Panel.asfreq
reading sources... [ 41%] generated/pandas.Panel.astype
reading sources... [ 41%] generated/pandas.Panel.axes
reading sources... [ 41%] generated/pandas.Panel.conform
reading sources... [ 42%] generated/pandas.Panel.copy
reading sources... [ 42%] generated/pandas.Panel.count
reading sources... [ 42%] generated/pandas.Panel.cummax
reading sources... [ 42%] generated/pandas.Panel.cummin
reading sources... [ 43%] generated/pandas.Panel.cumprod
reading sources... [ 43%] generated/pandas.Panel.cumsum
reading sources... [ 43%] generated/pandas.Panel.div
reading sources... [ 44%] generated/pandas.Panel.drop
reading sources... [ 44%] generated/pandas.Panel.dropna
reading sources... [ 44%] generated/pandas.Panel.fillna
reading sources... [ 44%] generated/pandas.Panel.filter
reading sources... [ 45%] generated/pandas.Panel.first
reading sources... [ 45%] generated/pandas.Panel.from_dict
reading sources... [ 45%] generated/pandas.Panel.get_value
reading sources... [ 46%] generated/pandas.Panel.groupby
reading sources... [ 46%] generated/pandas.Panel.iteritems
reading sources... [ 46%] generated/pandas.Panel.ix
reading sources... [ 46%] generated/pandas.Panel.join
reading sources... [ 47%] generated/pandas.Panel.last
reading sources... [ 47%] generated/pandas.Panel.major_xs
reading sources... [ 47%] generated/pandas.Panel.max
reading sources... [ 48%] generated/pandas.Panel.mean
reading sources... [ 48%] generated/pandas.Panel.median
reading sources... [ 48%] generated/pandas.Panel.min
reading sources... [ 48%] generated/pandas.Panel.minor_xs
reading sources... [ 49%] generated/pandas.Panel.mul
reading sources... [ 49%] generated/pandas.Panel.ndim
reading sources... [ 49%] generated/pandas.Panel.pct_change
reading sources... [ 50%] generated/pandas.Panel.pop
reading sources... [ 50%] generated/pandas.Panel.prod
reading sources... [ 50%] generated/pandas.Panel.reindex
reading sources... [ 50%] generated/pandas.Panel.reindex_axis
reading sources... [ 51%] generated/pandas.Panel.reindex_like
reading sources... [ 51%] generated/pandas.Panel.resample
reading sources... [ 51%] generated/pandas.Panel.select
reading sources... [ 51%] generated/pandas.Panel.set_value
reading sources... [ 52%] generated/pandas.Panel.shape
reading sources... [ 52%] generated/pandas.Panel.shift
reading sources... [ 52%] generated/pandas.Panel.skew
reading sources... [ 53%] generated/pandas.Panel.sort_index
reading sources... [ 53%] generated/pandas.Panel.std
reading sources... [ 53%] generated/pandas.Panel.sub
reading sources... [ 53%] generated/pandas.Panel.sum
reading sources... [ 54%] generated/pandas.Panel.swapaxes
reading sources... [ 54%] generated/pandas.Panel.swaplevel
reading sources... [ 54%] generated/pandas.Panel.take
reading sources... [ 55%] generated/pandas.Panel.to_excel
reading sources... [ 55%] generated/pandas.Panel.to_frame
reading sources... [ 55%] generated/pandas.Panel.to_sparse
reading sources... [ 55%] generated/pandas.Panel.transpose
reading sources... [ 56%] generated/pandas.Panel.truncate
reading sources... [ 56%] generated/pandas.Panel.tz_convert
reading sources... [ 56%] generated/pandas.Panel.tz_localize
reading sources... [ 57%] generated/pandas.Panel.values
reading sources... [ 57%] generated/pandas.Panel.var
reading sources... [ 57%] generated/pandas.Panel.xs
reading sources... [ 57%] generated/pandas.Series.__init__
reading sources... [ 58%] generated/pandas.Series.__iter__
reading sources... [ 58%] generated/pandas.Series.abs
reading sources... [ 58%] generated/pandas.Series.add
reading sources... [ 58%] generated/pandas.Series.align
reading sources... [ 59%] generated/pandas.Series.any
reading sources... [ 59%] generated/pandas.Series.append
reading sources... [ 59%] generated/pandas.Series.apply
reading sources... [ 60%] generated/pandas.Series.argsort
reading source,508:0s... [ 60%] generated/pandas.Series.asfreq
reading sources... [ 60%] generated/pandas.Series.asof
reading sources... [ 60%] generated/pandas.Series.astype
reading sources... [ 61%] generated/pandas.Series.autocorr
reading sources... [ 61%] generated/pandas.Series.between
reading sources... [ 61%] generated/pandas.Series.clip
reading sources... [ 62%] generated/pandas.Series.clip_lower
reading sources... [ 62%] generated/pandas.Series.clip_upper
reading sources... [ 62%] generated/pandas.Series.combine
,10001:0reading sources... [ 62%] generated/pandas.Series.combine_first
reading sources... [ 63%] generated/pandas.Series.copy
reading sources... [ 63%] generated/pandas.Series.corr
reading sources... [ 63%] generated/pandas.Series.count
reading sources... [ 64%] generated/pandas.Series.cov
reading sources... [ 64%] generated/pandas.Series.cummax
reading sources... [ 64%] generated/pandas.Series.cummin
reading sources... [ 64%] generated/pandas.Series.cumprod
reading sources... [ 65%] generated/pandas.Series.cumsum
reading sources... [ 65%] generated/pandas.Series.describe
reading sources... [ 65%] generated/pandas.Series.diff
reading sources... [ 66%] generated/pandas.Series.div
reading sources... [ 66%] generated/pandas.Series.drop
reading sources... [ 66%] generated/pandas.Series.dropna
reading sources... [ 66%] generated/pandas.Series.dtype
reading sources... [ 67%] generated/pandas.Series.fillna
reading sources... [ 67%] generated/pandas.Series.first
reading sources... [ 67%] generated/pandas.Series.first_valid_index
reading sources... [ 67%] generated/pandas.Series.from_csv
reading sources... [ 68%] generated/pandas.Series.get
reading sources... [ 68%] generated/pandas.Series.groupby
reading sources... [ 68%] generated/pandas.Series.head
reading sources... [ 69%] generated/pandas.Series.hist
reading sources... [ 69%] generated/pandas.Series.idxmax
reading sources... [ 69%] generated/pandas.Series.idxmin
reading sources... [ 69%] generated/pandas.Series.interpolate
reading sources... [ 70%] generated/pandas.Series.isin
reading sources... [ 70%] generated/pandas.Series.isnull
reading sources... [ 70%] generated/pandas.Series.iteritems
reading sources... [ 71%] generated/pandas.Series.ix
reading sources... [ 71%] generated/pandas.Series.kurt
reading sources... [ 71%] generated/pandas.Series.last
reading sources... [ 71%] generated/pandas.Series.last_valid_index
reading sources... [ 72%] generated/pandas.Series.mad
reading sources... [ 72%] generated/pandas.Series.map
reading sources... [ 72%] generated/pandas.Series.max
reading sources... [ 73%] generated/pandas.Series.mean
reading sources... [ 73%] generated/pandas.Series.median
reading sources... [ 73%] generated/pandas.Series.min
reading sources... [ 73%] generated/pandas.Series.mul
reading sources... [ 74%] generated/pandas.Series.notnull
reading sources... [ 74%] generated/pandas.Series.nunique
reading sources... [ 74%] generated/pandas.Series.order
reading sources... [ 75%] generated/pandas.Series.pct_change
reading sources... [ 75%] generated/pandas.Series.plot
reading sources... [ 75%] generated/pandas.Series.prod
reading sources... [ 75%] generated/pandas.Series.quantile
reading sources... [ 76%] generated/pandas.Series.rank
reading sources... [ 76%] generated/pandas.Series.reindex
reading sources... [ 76%] generated/pandas.Series.reindex_like
reading sources... [ 76%] generated/pandas.Series.rename
reading sources... [ 77%] generated/pandas.Series.reorder_levels
reading sources... [ 77%] generated/pandas.Series.replace
reading sources... [ 77%] generated/pandas.Series.resample
reading sources... [ 78%] generated/pandas.Series.reset_index
reading sources... [ 78%] generated/pandas.Series.round
reading sources... [ 78%] generated/pandas.Series.select
reading sources... [ 78%] generated/pandas.Series.shift
reading sources... [ 79%] generated/pandas.Series.skew
reading sources... [ 79%] generated/pandas.Series.sort
reading sources... [ 79%] generated/pandas.Series.sort_index
reading sources... [ 80%] generated/pandas.Series.sortlevel
reading sources... [ 80%] generated/pandas.Series.std
reading sources... [ 80%] generated/pandas.Series.sub
reading sources... [ 80%] generated/pandas.Series.sum
reading sources... [ 81%] generated/pandas.Series.swaplevel
reading sources... [ 81%] generated/pandas.Series.tail
reading sources... [ 81%] generated/pandas.Series.take
reading sources... [ 82%] generated/pandas.Series.to_csv
reading sources... [ 82%] generated/pandas.Series.to_dict
reading sources... [ 82%] generated/pandas.Series.to_sparse
reading sources... [ 82%] generated/pandas.Series.to_string
reading sources... [ 83%] generated/pandas.Series.truncate
reading sources... [ 83%] generated/pandas.Series.tz_convert
reading sources... [ 83%] generated/pandas.Series.tz_localize
reading sources... [ 83%] generated/pandas.Series.unique
reading sources... [ 84%] generated/pandas.Series.unstack
reading sources... [ 84%] generated/pandas.Series.update
reading sources... [ 84%] generated/pandas.Series.value_counts
reading sources... [ 85%] generated/pandas.Series.values
reading sources... [ 85%] generated/pandas.Series.var
reading sources... [ 85%] generated/pandas.Series.weekday
reading sources... [ 85%] generated/pandas.core.common.isnull
reading sources... [ 86%] generated/pandas.core.common.notnull
reading sources... [ 86%] generated/pandas.io.parsers.read_clipboard
reading sources... [ 86%] generated/pandas.io.parsers.read_csv
reading sources... [ 87%] generated/pandas.io.parsers.read_fwf
reading sources... [ 87%] generated/pandas.io.parsers.read_table
reading sources... [ 87%] generated/pandas.io.pytables.HDFStore.append
reading sources... [ 87%] generated/pandas.io.pytables.HDFStore.get
reading sources... [ 88%] generated/pandas.io.pytables.HDFStore.put
reading sources... [ 88%] generated/pandas.io.pytables.HDFStore.select
reading sources... [ 88%] generated/pandas.io.sql.read_frame
reading sources... [ 89%] generated/pandas.io.sql.write_frame
reading sources... [ 89%] generated/pandas.stats.moments.ewma
reading sources... [ 89%] generated/pandas.stats.moments.ewmcorr
reading sources... [ 89%] generated/pandas.stats.moments.ewmcov
reading sources... [ 90%] generated/pandas.stats.moments.ewmstd
reading sources... [ 90%] generated/pandas.stats.moments.ewmvar
reading sources... [ 90%] generated/pandas.stats.moments.rolling_apply
reading sources... [ 91%] generated/pandas.stats.moments.rolling_corr
reading sources... [ 91%] generated/pandas.stats.moments.rolling_count
reading sources... [ 91%] generated/pandas.stats.moments.rolling_cov
reading sources... [ 91%] generated/pandas.stats.moments.rolling_kurt
reading sources... [ 92%] generated/pandas.stats.moments.rolling_mean
reading sources... [ 92%] generated/pandas.stats.moments.rolling_median
reading sources... [ 92%] generated/pandas.stats.moments.rolling_quantile
reading sources... [ 92%] generated/pandas.stats.moments.rolling_skew
reading sources... [ 93%] generated/pandas.stats.moments.rolling_std
reading sources... [ 93%] generated/pandas.stats.moments.rolling_sum
reading sources... [ 93%] generated/pandas.stats.moments.rolling_var
reading sources... [ 94%] generated/pandas.tools.merge.concat
reading sources... [ 94%] generated/pandas.tools.merge.merge
reading sources... [ 94%] generated/pandas.tools.pivot.pivot_table
reading sources... [ 94%] generated/pandas.tseries.tools.to_datetime
reading sources... [ 95%] gotchas
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-5-a9adc0083a3f> in <module>()
----> 1 s2

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_header = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(l,7783:0en(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-16-e0937222ab25> in <module>()
----> 1 df.reindex([1, 2, 4])

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
reading sources... [ 95%] groupby
,10001:0---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-982c2f90cfe3> in <module>()
----> 1 options.display.mpl_style='default'

NameError: name 'options' is not defined
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-82-aae02b32d5fc> in <module>()
----> 1 sf.groupby(sf).filter(lambda x: x.sum() > 2)

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in __getattr__(self, attr)
    180 
    181         raise AttributeError("'%s' object has no attribute '%s'" %
--> 182                              (type(self).__name__, attr))
    183 
    184     def __getitem__(self, key):

AttributeError: 'SeriesGroupBy' object has no attribute 'filter'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-84-89d79df28299> in <module>()
----> 1 dff.groupby('B').filter(lambda x: len(x) > 2)

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in wrapper(*args, **kwargs)
    207                 return self.apply(curried_with_axis)
    208             except Exception:
--> 209                 return self.apply(curried)
    210 
    211         return wrapper

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in apply(self, func, *args, **kwargs)
    266         applied : type depending on grouped object and function
    267         """
--> 268         return self._python_apply_general(func, *args, **kwargs)
    269 
    270     def aggregate(self, func, *args, **kwargs):

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in _python_apply_general(self, func, *args, **kwargs)
    415             group_axes = _get_axes(group)
    416 
--> 417             res = func(group, *args, **kwargs)
    418 
    419             if not _is_indexed_like(res, group_axes):

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in curried(x)
    202                 return f(x, *args, **kwargs_with_axis)
    203             def curried(x):
--> 204                 return f(x, *args, **kwargs)
    205 
    206             try:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in filter(self, items, like, regex)
   2459         import re
   2460         if items is not None:
-> 2461             return self.reindex(columns=[r for r in items if r in self])
   2462         elif like:
   2463             return self.select(lambda x: like in x, axis=1)

TypeError: 'function' object is not iterable
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-85-577549ba6d9f> in <module>()
----> 1 dff.groupby('B').filter(lambda x: len(x) > 2, dropna=False)

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in wrapper(*args, **kwargs)
    207                 return self.apply(curried_with_axis)
    208             except Exception:
--> 209                 return self.apply(curried)
    210 
    211         return wrapper

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in apply(self, func, *args, **kwargs)
    266         applied : type depending on grouped object and function
    267         """
--> 268         return self._python_apply_general(func, *args, **kwargs)
    269 
    270     def aggregate(self, func, *args, **kwargs):

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in _python_apply_general(self, func, *args, **kwargs)
    415             group_axes = _get_axes(group)
    416 
--> 417             res = func(group, *args, **kwargs)
    418 
    419             if not _is_indexed_like(res, group_axes):

/usr/lib/pymodules/python2.7/pandas/core/groupby.pyc in curried(x)
    202                 return f(x, *args, **kwargs_with_axis)
    203             def curried(x):
--> 204                 return f(x, *args, **kwargs)
    205 
    206             try:

TypeError: filter() got an unexpected keyword argument 'dropna'
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-87-9171e929933c> in <module>()
----> 1 grouped.agg(lambda x: x.std())

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
reading sources... [ 95%] index
reading sources... [ 96%] indexing
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-24-,8023:064337526a1f3> in <module>()
----> 1 s1.loc['c':]

AttributeError: 'Series' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-25-e2f973f0140e> in <module>()
----> 1 s1.loc['b']

AttributeError: 'Series' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-26-e49c77495cfe> in <module>()
----> 1 s1.loc['c':] = 0

AttributeError: 'Series' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-30-c069b16f1c2a> in <module>()
----> 1 df1.loc[['a','b','d'],:]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-31-2a2c5f2d8bc7> in <module>()
----> 1 df1.loc['d':,'A':'C']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-32-3ab034dfcb46> in <module>()
----> 1 df1.loc['a']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-33-a52230dc887e> in <module>()
----> 1 df1.loc['a']>0

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-34-39eddfe92b24> in <module>()
----> 1 df1.loc[:,df1.loc['a']>0]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-35-39e08c6e234c> in <module>()
----> 1 df1.loc['a','A']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-38-6c58d63982cf> in <module>()
----> 1 s1.iloc[:3]

AttributeError: 'Series' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-39-db34f492e714> in <module>()
----> 1 s1.iloc[3]

AttributeError: 'Series' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-40-d128484e264b> in <module>()
----> 1 s1.iloc[:3] = 0

AttributeError: 'Series' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-44-0d54b8961042> in <module>()
----> 1 df1.iloc[:3]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-45-57e27d3aac1b> in <module>()
----> 1 df1.iloc[1:5,2:4]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-46-9549526b0677> in <module>()
----> 1 df1.iloc[[1,3,5],[1,3]]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-47-78fd3243db29> in <module>()
----> 1 df1.iloc[1:3,:]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-48-c993c189a283> in <module>()
----> 1 df1.iloc[:,1:3]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

Attri,10001:0buteError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-49-25f1f8411809> in <module>()
----> 1 df1.iloc[1,1]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-50-ab9334621896> in <module>()
----> 1 df1.iloc[1]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-54-83bcafe68f09> in <module>()
----> 1 s.iat[5]

AttributeError: 'TimeSeries' object has no attribute 'iat'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-55-76948d15c12c> in <module>()
----> 1 df.at[dates[5], 'A']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'at'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-56-0ca2076584ff> in <module>()
----> 1 df.iat[3, 0]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iat'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-57-a2de3927ee38> in <module>()
----> 1 df.at[dates[5], 'E'] = 7

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'at'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-58-50838849deb6> in <module>()
----> 1 df.iat[3, 0] = 7

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iat'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-70-b6c5138f56c4> in <module>()
----> 1 df2.loc[criterion & (df2['b'] == 'x'),'b':'c']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'loc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-73-a6b056ac0de0> in <module>()
----> 1 df.isin(values)

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'isin'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-75-a6b056ac0de0> in <module>()
----> 1 df.isin(values)

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'isin'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-77-bc86a756dd2d> in <module>()
----> 1 df.isin(values, iloc=True)

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'isin'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-79-c13af283c15b> in <module>()
----> 1 s.where(s > 0)

AttributeError: 'TimeSeries' object has no attribute 'where'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-81-9eb627a8331f> in <module>()
----> 1 df.where(df < 0, -df)

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'where'
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-86-21623f597f3a> in <module>()
----> 1 df2[df2 < 0] = 0

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __setitem__(self, key, value)
   1725                                   'DataFrame objects')
   1726 
-> 1727             self._boolean_set(key, value)
   1728         elif isinstance(key, (np.ndarray, list)):
   1729             return self._set_item_multiple(key, value)

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _boolean_set(self, key, value)
   1738 
   1739         if self._is_mixed_type:
-> 1740             raise ValueError('Cannot do boolean setting on mixed-type frame')
   1741 
   1742         if isinstance(value, DataFrame):

ValueError: Cannot do boolean setting on mixed-type frame
---------------------------------------------------------------------------
PandasError                               Traceback (most recent call last)
<ipython-input-89-063ccc2a5cec> in <module>()
----> 1 df2[ df2[1:4] > 0 ] = 3

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __setitem__(self, key, value)
   1722             if not (key.index.equals(self.index) and
   1723                     key.columns.equals(self.columns)):
-> 1724                 raise PandasError('Can only index with like-indexed '
   1725                                   'DataFrame objects')
   1726 

PandasError: Can only index with like-indexed DataFrame objects
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-92-1a88f3bd429f> in <module>()
----> 1 df_orig.where(df > 0, -df, inplace=True);

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'where'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-93-237c84ae9f48> in <module>()
----> 1 s.mask(s >= 0)

AttributeError: 'TimeSeries' object has no attribute 'mask'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-94-c021a680b3a4> in <module>()
----> 1 df.mask(df >= 0)

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             re,6385:0turn self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'mask'
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-120-7349f327c281> in <module>()
----> 1 df.reindex(index=subindex, columns=['C', 'B'])

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-121-01978b079cbf> in <module>()
----> 1 df.ix[subindex, ['C', 'B']]

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict =,10001:0 self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-123-a761e62e13c5> in <module>()
----> 1 df2.ix[subindex, ['C', 'B']] = 0

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in __setitem__(self, key, value)
     62                 raise IndexingError('only tuples of length <= %d supported',
     63                                     self.ndim)
---> 64             indexer = self._convert_tuple(key)
     65         else:
     66             indexer = self._convert_to_indexer(key)

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _convert_tuple(self, key)
     71         keyidx = []
     72         for i, k in enumerate(key):
---> 73             idx = self._convert_to_indexer(k, axis=i)
     74             keyidx.append(idx)
     75         return tuple(keyidx)

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _convert_to_indexer(self, obj, axis)
    408                 mask = check == -1
    409                 if mask.any():
--> 410                     raise KeyError('%s not in index' % objarr[mask])
    411 
    412                 return indexer

KeyError: "['2000-01-04T00:00:00.000000000+0000' '2000-01-05T00:00:00.000000000+0000'\n '2000-01-06T00:00:00.000000000+0000'] not in index"
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-125-122c017683d4> in <module>()
----> 1 df.ix[[4,3,1]]

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_,10001:0columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-126-b021891fca39> in <module>()
----> 1 df.ix[dates[[4,3,1]]]

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-130-5479dbe5e1b5> in <module>()
----> 1 df.ix[date1:date2]

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in __getitem__(self, key)
     33             return self._getitem_tuple(key)
     34         else:
---> 35             return self._getitem_axis(key, axis=0)
     36 
     37     def _get_label(self, label, axis=0):

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _getitem_axis(self, key, axis)
    240         labels = self.obj._get_axis(axis)
    241         if isinstance(key, slice):
--> 242             return self._get_slice_axis(key, axis=axis)
    243         elif _is_list_like(key) and not (isinstance(key, tuple) and
    244                                          isinstance(labels, MultiIndex)):

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _get_slice_axis(self, slice_obj, axis)
    459         else:
    460             try:
--> 461                 i, j = labels.slice_locs(start, stop)
    462                 slicer = slice(i, j, slice_obj.step)
    463             except Exception:

/usr/lib/pymodules/python2.7/pandas/core/index.pyc in slice_locs(self, start, end)
   1058             except KeyError:
   1059                 if self.is_monotonic:
-> 1060                     beg_slice = self.searchsorted(start, side='left')
   1061                 else:
   1062                     raise

/usr/lib/pymodules/python2.7/pandas/lib.so in pandas.lib._Timestamp.__richcmp__ (pandas/src/tseries.c:30505)()

TypeError: Cannot compare Timestamp with 3
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-131-ff747daa1c6c> in <module>()
----> 1 df['A'].ix[date1:date2]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getitem__(self, key)
   1634                 raise ValueError('Cannot index using non-boolean DataFrame')
   1635         else:
-> 1636             return self._get_item_cache(key)
   1637 
   1638     def _getitem_array(self, key):

/usr/l,4577:0ib/pymodules/python2.7/pandas/core/generic.pyc in _get_item_cache(self, item)
    472             return cache[item]
    473         except Exception:
--> 474             values = self._data.get(item)
    475             res = self._box_item_values(item, values)
    476             cache[item] = res

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in get(self, item)
    825 
    826     def get(self, item):
--> 827         _, block = self._find_block(item)
    828         return block.get(item)
    829 

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in _find_block(self, item)
    933 
    934     def _find_block(self, item):
--> 935         self._check_have(item)
    936         for i, block in enumerate(self.blocks):
    937             if item in block:

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in _check_have(self, item)
    940     def _check_have(self, item):
    941         if item not in self.items:
--> 942             raise KeyError('no item named %s' % str(item))
    943 
    944     def reindex_axis(self, new_axis, method=None, axis=0, copy=True):

KeyError: 'no item named A'
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-136-a02c31af1753> in <module>()
----> 1 df.ix[df['A'] > 0, 'B']

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getitem__(self, key)
   1634                 raise ValueError('Cannot index using non-boolean DataFrame')
   1635         else:
-> 1636             return self._get_item_cache(key)
   1637 
   1638     def _getitem_array(self, key):

/usr/lib/pymodules/python2.7/pandas/core/generic.pyc in _get_item_cache(self, item)
    472             return cache[item]
    473         except Exception:
--> 474             values = self._data.get(item)
    475             res = self._box_item_values(item, values)
    476             cache[item] = res

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in get(self, item)
    825 
    826     def get(self, item):
--> 827         _, block = self._find_block(item)
    828         return block.get(item)
    829 

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in _find_block(self, item)
    933 
    934     def _find_block(self, item):
--> 935         self._check_have(item)
    936         for i, block in enumerate(self.blocks):
    937             if item in block:

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in _check_have(self, item)
    940     def _check_have(self, item):
    941         if item not in self.items:
--> 942             raise KeyError('no item named %s' % str(item))
    943 
    944     def reindex_axis(self, new_axis, method=None, axis=0, copy=True):

KeyError: 'no item named A'
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-137-ed4a787eac88> in <module>()
----> 1 df.ix[date1:date2, 'B']

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in __getitem__(self, key)
     31                 pass
     32 
---> 33             return self._getitem_tuple(key)
     34         else:
     35             return self._getitem_axis(key, axis=0)

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _getitem_tuple(self, tup)
    120     def _getitem_tuple(self, tup):
    121         try:
--> 122             return self._getitem_lowerdim(tup)
    123         except IndexingError:
    124             pass

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _getitem_lowerdim(self, tup)
    214         for i, key in enumerate(tup):
    215             if _is_label_like(key) or isinstance(key, tuple):
--> 216                 section = self._getitem_axis(key, axis=i)
    217 
    218                 # might have been a MultiIndex

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _getitem_axis(self, key, axis)
    269             if com.is_integer(key) and not _is_integer_index(labels):
    270                 return self._get_loc(key, axis=axis)
--> 271             return self._get_label(lab, axis=axis)
    272 
    273     def _getitem_iterable(self, key, axis=0):

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _get_label(self, label, axis)
     39             return self.obj.xs(label, axis=axis, copy=False)
     40         except Exception:
---> 41             return self.obj.xs(label, axis=axis, copy=True)
     42 
     43     def _get_loc(self, key, axis=0):

/usr/lib/pymodules/python2.7/pandas/co,10001:0re/frame.pyc in xs(self, key, axis, level, copy)
   1865 
   1866         if axis == 1:
-> 1867             data = self[key]
   1868             if copy:
   1869                 data = data.copy()

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getitem__(self, key)
   1634                 raise ValueError('Cannot index using non-boolean DataFrame')
   1635         else:
-> 1636             return self._get_item_cache(key)
   1637 
   1638     def _getitem_array(self, key):

/usr/lib/pymodules/python2.7/pandas/core/generic.pyc in _get_item_cache(self, item)
    472             return cache[item]
    473         except Exception:
--> 474             values = self._data.get(item)
    475             res = self._box_item_values(item, values)
    476             cache[item] = res

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in get(self, item)
    825 
    826     def get(self, item):
--> 827         _, block = self._find_block(item)
    828         return block.get(item)
    829 

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in _find_block(self, item)
    933 
    934     def _find_block(self, item):
--> 935         self._check_have(item)
    936         for i, block in enumerate(self.blocks):
    937             if item in block:

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in _check_have(self, item)
    940     def _check_have(self, item):
    941         if item not in self.items:
--> 942             raise KeyError('no item named %s' % str(item))
    943 
    944     def reindex_axis(self, new_axis, method=None, axis=0, copy=True):

KeyError: 'no item named B'
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-138-0b368a01ac6e> in <module>()
----> 1 df.ix[date1, 'B']

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in __getitem__(self, key)
     31                 pass
     32 
---> 33             return self._getitem_tuple(key)
     34         else:
     35             return self._getitem_axis(key, axis=0)

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _getitem_tuple(self, tup)
    120     def _getitem_tuple(self, tup):
    121         try:
--> 122             return self._getitem_lowerdim(tup)
    123         except IndexingError:
    124             pass

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _getitem_lowerdim(self, tup)
    214         for i, key in enumerate(tup):
    215             if _is_label_like(key) or isinstance(key, tuple):
--> 216                 section = self._getitem_axis(key, axis=i)
    217 
    218                 # might have been a MultiIndex

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _getitem_axis(self, key, axis)
    263                     return self._get_loc(key, axis=0)
    264 
--> 265             return self._get_label(idx, axis=0)
    266         else:
    267             labels = self.obj._get_axis(axis)

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _get_label(self, label, axis)
     39             return self.obj.xs(label, axis=axis, copy=False)
     40         except Exception:
---> 41             return self.obj.xs(label, axis=axis, copy=True)
     42 
     43     def _get_loc(self, key, axis=0):

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in xs(self, key, axis, level, copy)
   1876             loc, new_index = self.index.get_loc_level(key)
   1877         else:
-> 1878             loc = self.index.get_loc(key)
   1879 
   1880             if isinstance(loc, np.ndarray):

/usr/lib/pymodules/python2.7/pandas/core/index.pyc in get_loc(self, key)
    645         loc : int
    646         """
--> 647         return self._engine.get_loc(key)
    648 
    649     def get_value(self, series, key):

/usr/lib/pymodules/python2.7/pandas/lib.so in pandas.lib.IndexEngine.get_loc (pandas/src/tseries.c:108347)()

/usr/lib/pymodules/python2.7/pandas/lib.so in pandas.lib.IndexEngine.get_loc (pandas/src/tseries.c:108291)()

KeyError: <Timestamp: 2000-01-03 00:00:00>
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-145-5c1be35f63b9> in <module>()
----> 1 df2.ix[2] = np.nan

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in __setitem__(self, key, value)
     66             indexer = self._convert_to_indexer(key)
     67 
---> 68         self._setitem_with_indexer(indexer, value)
     69 
     70     def _convert_tuple(self, key):

/usr/lib/pymodules/python2.7/pandas/core/indexing.pyc in _setitem_with_indexer(self, indexer, value)
    104                     data.values[plane_indexer] = value
    105             except ValueError:
--> 106                 for item, v in zip(item_labels[het_idx], value):
    107                     data = self.obj[item]
    108                     data.values[plane_indexer] = v

TypeError: zip argument #2 must support iteration
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-155-8c3e7ca06c70> in <module>()
----> 1 df.iloc[0]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'iloc'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-191-54cca06e8b9e> in <module>()
----> 1 pd.set_option('display.multi_sparse', False)

AttributeError: 'module' object has no attribute 'set_option'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-193-c7a60fe6d2c0> in <module>()
----> 1 pd.set_option('display.multi_sparse', True)

AttributeError: 'module' object has no attribute 'set_option'
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-200-5eb697968958> in <module>()
----> 1 s + s[:-2]

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_header = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(len(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    ,6385:0558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-201-bf542d1683eb> in <module>()
----> 1 s + s[::2]

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in __repr__(self)
    787             result = self._get_repr(print_header=True,
    788                                     length=len(self) > 50,
--> 789                                     name=True)
    790         else:
    791             result = '%s' % ndarray.__repr__(self)

/usr/lib/pymodules/python2.7/pandas/core/series.pyc in _get_repr(self, name, print_header, length, na_rep, float_format)
    848                                         length=length, na_rep=na_rep,
    849                                         float_format=float_format)
--> 850         return formatter.to_string()
    851 
    852     def __str__(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self)
    109 
    110         fmt_index, have_header = self._get_formatted_index()
--> 111         fmt_values = self._get_formatted_values()
    112 
    113         maxlen = max(len(x) for x in fmt_index)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _get_formatted_values(self)
    100         return format_array(self.series.values, None,
    101                             float_format=self.float_format,
--> 102                             na_rep=self.na_rep)
    103 
    104     def to_string(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be ri,10001:0sked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
reading sources... [ 96%] install
reading sources... [ 96%] io
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-11-ec9075c5914c> in <module>()
----> 1 pd.read_csv(StringIO(data), lineterminator='~')

TypeError: read_csv() got an unexpected keyword argument 'lineterminator'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-14-aafbdb19e727> in <module>()
----> 1 pd.read_csv(StringIO(data), skipinitialspace=True)

TypeError: read_csv() got an unexpected keyword argument 'skipinitialspace'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-17-dba83f21b5ba> in <module>()
----> 1 df = pd.read_csv(StringIO(data), dtype=object)

TypeError: read_csv() got an unexpected keyword argument 'dtype'
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-19-57a165d5cd3f> in <module>()
----> 1 df['a'][0]

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getitem__(self, key)
   1634                 raise ValueError('Cannot index using non-boolean DataFrame')
   1635         else:
-> 1636             return self._get_item_cache(key)
   1637 
   1638     def _getitem_array(self, key):

/usr/lib/pymodules/python2.7/pandas/core/generic.pyc in _get_item_cache(self, item)
    472             return cache[item]
    473         except Exception:
--> 474             values = self._data.get(item)
    475             res = self._box_item_values(item, values)
    476             cache[item] = res

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in get(self, item)
    825 
    826     def get(self, item):
--> 827         _, block = self._find_block(item)
    828         return block.get(item)
    829 

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in _find_block(self, item)
    933 
    934     def _find_block(self, item):
--> 935         self._check_have(item)
    936         for i, block in enumerate(self.blocks):
    937             if item in block:

/usr/lib/pymodules/python2.7/pandas/core/internals.pyc in _check_have(self, item)
    940     def _check_have(self, item):
    941         if item not in self.items:
--> 942             raise KeyError('no item named %s' % str(item))
    943 
    944     def reindex_axis(self, new_axis, method=None, axis=0, copy=True):

KeyError: 'no item named a'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-20-4a92399ef4fb> in <module>()
----> 1 df = pd.read_csv(StringIO(data), dtype={'b': object, 'c': np.float64})

TypeError: read_csv() got an unexpected keyword argument 'dtype'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-33-b0c51ce1c0b0> in <module>()
----> 1 pd.read_csv(StringIO(data), usecols=['b', 'd'])

TypeError: read_csv() got an unexpected keyword argument 'usecols'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-34-ec8f0198d561> in <module>()
----> 1 pd.read_csv(StringIO(data), usecols=[0, 2, 3])

TypeError: read_csv() got an unexpected keyword argument 'usecols'
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-45-3463852735d7> in <module>()
----> 1 pd.read_csv(StringIO(data))

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.compute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
InvalidOperation                          Traceback (most recent call last)
<ipython-input-46-3fb3b7176d1f> in <module>()
----> 1 pd.read_csv(StringIO(data), index_col=False)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in __call__(self, result)
    236             self.start_displayhook()
    237             self.write_output_prompt()
--> 238             format_dict = self.com,6656:0pute_format_data(result)
    239             self.write_format_data(format_dict)
    240             self.update_user_ns(result)

/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in compute_format_data(self, result)
    148             MIME type representation of the object.
    149         """
--> 150         return self.shell.display_formatter.format(result)
    151 
    152     def write_format_data(self, format_dict):

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in format(self, obj, include, exclude)
    124                     continue
    125             try:
--> 126                 data = formatter(obj)
    127             except:
    128                 # FIXME: log the exception

/usr/lib/python2.7/dist-packages/IPython/core/formatters.pyc in __call__(self, obj)
    445                 type_pprinters=self.type_printers,
    446                 deferred_pprinters=self.deferred_printers)
--> 447             printer.pretty(obj)
    448             printer.flush()
    449             return stream.getvalue()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in pretty(self, obj)
    358                             if callable(meth):
    359                                 return meth(obj, self, cycle)
--> 360             return _default_pprint(obj, self, cycle)
    361         finally:
    362             self.end_group()

/usr/lib/python2.7/dist-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)
    478     if getattr(klass, '__repr__', None) not in _baseclass_reprs:
    479         # A user-provided repr.
--> 480         p.text(repr(obj))
    481         return
    482     p.begin_group(1, '<')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __repr__(self)
    578         """
    579         buf = StringIO()
--> 580         if self._need_info_repr_():
    581             self.info(buf=buf, verbose=self._verbose_info)
    582         else:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in _need_info_repr_(self)
    566             else:
    567                 buf = StringIO()
--> 568                 self.to_string(buf=buf)
    569                 value = buf.getvalue()
    570                 if max([len(l) for l in value.split('\n')]) > terminal_width:

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, nanRep, index_names, justify, force_unicode)
   1226                                            index_names=index_names,
   1227                                            header=header, index=index)
-> 1228         formatter.to_string(force_unicode=force_unicode)
   1229 
   1230         if buf is None:

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in to_string(self, force_unicode)
    211             for i, c in enumerate(self.columns):
    212                 if self.header:
--> 213                     fmt_values = self._format_col(i)
    214                     cheader = str_columns[i]
    215                     max_len = max(max(_strlen(x) for x in fmt_values),

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in _format_col(self, i)
    253                             float_format=self.float_format,
    254                             na_rep=self.na_rep,
--> 255                             space=self.col_space)
    256 
    257     def to_html(self):

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in format_array(values, formatter, float_format, na_rep, digits, space, justify)
    473                         justify=justify)
    474 
--> 475     return fmt_obj.get_result()
    476 
    477 

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in get_result(self)
    557     def get_result(self):
    558         if self.formatter is not None:
--> 559             fmt_values = [self.formatter(x) for x in self.values]
    560         else:
    561             fmt_str = '%% .%df' % (self.digits - 1)

/usr/lib/pymodules/python2.7/pandas/core/format.pyc in __call__(self, num)
    793         sign = 1
    794 
--> 795         if dnum < 0:  # pragma: no cover
    796             sign = -1
    797             dnum = -dnum

/usr/lib/python2.7/decimal.pyc in __lt__(self, other, context)
    882         if other is NotImplemented:
    883             return other
--> 884         ans = self._compare_check_nans(other, context)
    885         if ans:
    886             return False

/usr/lib/python2.7/decimal.pyc in _compare_check_nans(self, other, context)
    784                 return context._raise_error(InvalidOperation,
    785                                             'comparison involving NaN',
--> 786                                             self)
    787             elif other.is_qnan():
    788                 return context._raise_error(InvalidOperation,

/usr/lib/python2.7/decimal.pyc in _raise_error(self, condition, explanation, *args)
   3870         # Errors should only be risked on copies of the context
   3871         # self._ignored_flags = []
-> 3872         raise error(explanation)
   3873 
   3874     def _ignore_all_flags(self):

InvalidOperation: comparison involving NaN
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-87-a25ce6e630e7> in <module>()
----> 1 pd.read_csv(StringIO(data), true_values=['Yes'], false_values=['No'])

TypeError: read_csv() got an unexpected keyword argument 'true_values'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-90-1141e5e68a01> in <module>()
----> 1 pd.read_csv(StringIO(data), escapechar='\\')

TypeError: read_csv() got an unexpected keyword argument 'escapechar'
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
<ipython-input-106-302b09009de9> in <module>()
----> 1 from pandas.util.testing import makeCustomDataframe as mkdf

ImportError: cannot import name makeCustomDataframe
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-107-0430581b31bf> in <module>()
----> 1 df = mkdf(5,3,r_idx_nlevels=2,c_idx_nlevels=4)

NameError: name 'mkdf' is not defined
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-108-5723b23dbd6f> in ,10001:0<module>()
----> 1 df.to_csv('mi.csv',tupleize_cols=False)

TypeError: to_csv() got an unexpected keyword argument 'tupleize_cols'
---------------------------------------------------------------------------
IOError                                   Traceback (most recent call last)
<ipython-input-109-55650eeab3d2> in <module>()
----> 1 print open('mi.csv').read()

IOError: [Errno 2] No such file or directory: 'mi.csv'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-110-c8038795bf38> in <module>()
----> 1 pd.read_csv('mi.csv',header=[0,1,2,3],index_col=[0,1],tupleize_cols=False)

TypeError: read_csv() got an unexpected keyword argument 'tupleize_cols'
---------------------------------------------------------------------------
OSError                                   Traceback (most recent call last)
<ipython-input-111-73fab030ce24> in <module>()
----> 1 os.remove('mi.csv')

OSError: [Errno 2] No such file or directory: 'mi.csv'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-122-90b40321a488> in <module>()
----> 1 json = dfj.to_json()

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'to_json'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-123-832ed6b85533> in <module>()
----> 1 json

NameError: name 'json' is not defined
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-126-560d10ffcdad> in <module>()
----> 1 json = dfd.to_json(date_format='iso')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'to_json'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-127-832ed6b85533> in <module>()
----> 1 json

NameError: name 'json' is not defined
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-133-c19e6b61a66b> in <module>()
----> 1 dfj2.to_json('test.json')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'to_json'
---------------------------------------------------------------------------
IOError                                   Traceback (most recent call last)
<ipython-input-134-e345699bd527> in <module>()
----> 1 open('test.json').read()

IOError: [Errno 2] No such file or directory: 'test.json'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-135-08673b5fb1c0> in <module>()
----> 1 pd.read_json(json)

AttributeError: 'module' object has no attribute 'read_json'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-136-b48c4f51793c> in <module>()
----> 1 pd.read_json('test.json')

AttributeError: 'module' object has no attribute 'read_json'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-137-cbedff756be6> in <module>()
----> 1 pd.read_json('test.json',dtype=object).dtypes

AttributeError: 'module' object has no attribute 'read_json'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-138-539b2b1f172a> in <module>()
----> 1 pd.read_json('test.json',dtype={'A' : 'float32', 'bools' : 'int8'}).dtypes

AttributeError: 'module' object has no attribute 'read_json'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-143-0bd4a8893dc4> in <module>()
----> 1 json = si.to_json()

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'to_json'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-144-90de6237d16c> in <module>()
----> 1 sij = pd.read_json(json,convert_axes=False)

AttributeError: 'module' object has no attribute 'read_json'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-145-b2e0222ef4da> in <module>()
----> 1 sij

NameError: name 'sij' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-146-c5dc662b69e3> in <module>()
----> 1 sij.index

NameError: name 'sij' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-147-315d6d18f188> in <module>()
----> 1 sij.columns

NameError: name 'sij' is not defined
---------------------------------------------------------------------------
OSError                                   Traceback (most recent call last)
<ipython-input-148-374cbf5711e6> in <module>()
----> 1 os.remove('test.json')

OSError: [Errno 2] No such file or directory: 'test.json'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-149-15368cbb4893> in <module>()
----> 1 dfs = read_html(url)

NameError: name 'read_html' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-150-6a8e3ad132fd> in <module>()
----> 1 dfs

NameError: name 'dfs' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-151-adf564fc9f87> in <module>()
      1 with open(file_path, 'r') as f:
----> 2     dfs = read_html(f.read())

NameError: name 'read_html' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-152-6a8e3ad132fd> in <module>()
----> 1 dfs

NameError: name 'dfs' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-155-00d9a52e4007> in <module>()
----> 1 dfs = read_html(sio)

NameError: name 'read_html' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-156-6a8e3ad132fd> in <module>()
----> 1 dfs

NameError: name 'dfs' is not defined
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-163-8e4e312ace78> in <module>()
----> 1 print df.to_html(classes=['awesome_table_class', 'even_more_awesome_class'])

TypeError: to_html() got an unexpected keyword argument 'classes'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-165-281602a24d2a> in <module>()
----> 1 write_html(df, 'noescape', escape=False)

<ipython-input-157-0a28f753dc50> in write_html(df, filename, *args, **kwargs)
      2     static = os.path.abspath(os.path.join('source', '_static'))
      3     with open(os.path.join(static, filename + '.html'), 'w') as f:
----> 4         df.to_html(f, *args, **kwargs)

TypeError: to_html() got an unexpected keyword argument 'escape'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-166-3328a926be96> in <module>()
----> 1 print df.to_html(escape=False)

TypeError: to_html() got an unexpected keyword argument 'escape'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-170-1f8b11f0ff98> in <module>()
----> 1 df.to_clipboard()

/usr/lib/pymodul,10001:0es/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'to_clipboard'
---------------------------------------------------------------------------
TclError                                  Traceback (most recent call last)
<ipython-input-171-475cedd2a1b1> in <module>()
----> 1 pd.read_clipboard()

/usr/lib/pymodules/python2.7/pandas/io/parsers.pyc in read_clipboard(**kwargs)
    350     """
    351     from pandas.util.clipboard import clipboard_get
--> 352     text = clipboard_get()
    353     return read_table(StringIO(text), **kwargs)
    354 

/usr/lib/pymodules/python2.7/pandas/util/clipboard.pyc in clipboard_get()
     21         except Exception:
     22             pass
---> 23     return tkinter_clipboard_get()
     24 
     25 def clipboard_set(text):

/usr/lib/pymodules/python2.7/pandas/util/clipboard.pyc in tkinter_clipboard_get()
     78             "requires Tkinter.")
     79         raise Exception(message)
---> 80     root = Tkinter.Tk()
     81     root.withdraw()
     82     text = root.clipboard_get()

/usr/lib/python2.7/lib-tk/Tkinter.pyc in __init__(self, screenName, baseName, className, useTk, sync, use)
   1746                 baseName = baseName + ext
   1747         interactive = 0
-> 1748         self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)
   1749         if useTk:
   1750             self._loadtk()

TclError: no display name and no $DISPLAY environment variable
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-173-5c4669bcf5ac> in <module>()
----> 1 df.to_pickle('foo.pkl')

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'to_pickle'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-174-06cfa41132ac> in <module>()
----> 1 read_pickle('foo.pkl')

NameError: name 'read_pickle' is not defined
---------------------------------------------------------------------------
OSError                                   Traceback (most recent call last)
<ipython-input-175-9dd0f69d45bb> in <module>()
----> 1 os.remove('foo.pkl')

OSError: [Errno 2] No such file or directory: 'foo.pkl'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-184-adfe5a54112f> in <module>()
----> 1 store.root.wp._v_attrs.pandas_type

AttributeError: 'HDFStore' object has no attribute 'root'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-187-1fcf0002e582> in <module>()
----> 1 store.df

AttributeError: 'HDFStore' object has no attribute 'df'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-188-30288841365b> in <module>()
----> 1 del store['wp']

AttributeError: __delitem__
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-191-6b3d8b22d650> in <module>()
----> 1 with get_store('store.h5') as store:
      2      store.keys()

NameError: name 'get_store' is not defined
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-193-79e82f162995> in <module>()
----> 1 df_tl.to_hdf('store_tl.h5','table',append=True)

/usr/lib/pymodules/python2.7/pandas/core/frame.pyc in __getattr__(self, name)
   1697             return self[name]
   1698         raise AttributeError("'%s' object has no attribute '%s'" %
-> 1699                              (type(self).__name__, name))
   1700 
   1701     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'to_hdf'
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-194-b3fdf0ae99d4> in <module>()
----> 1 read_hdf('store_tl.h5', 'table', where = ['index>2'])

NameError: name 'read_hdf' is not defined
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-202-af7ad0bbe365> in <module>()
----> 1 store.root.df._v_attrs.pandas_type

AttributeError: 'HDFStore' object has no attribute 'root'
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-203-1ee0f41a6554> in <module>()
----> 1 store.put('foo/bar/bah', df)

/usr/lib/pymodules/python2.7/pandas/io/pytables.pyc in put(self, key, value, table, append, compression)
    340         """
    341         self._write_to_group(key, value, table=table, append=append,
--> 342                              comp=compression)
    343 
    344     def _get_handler(self, op, kind):

/usr/lib/pymodules/python2.7/pandas/io/pytables.pyc in _write_to_group(self, key, value, table, append, comp)
    389         root = self.handle.root
    390         if key not in root._v_children:
--> 391             group = self.handle.createGroup(root, key)
    392         else:
    393             group = getattr(root, key)

/usr/lib/python2.7/dist-packages/tables/file.pyc in createGroup(self, where, name, title, filters, createparents)
    671         _checkfilters(filters)
    672         return Group(parentNode, name,
--> 673                      title=title, new=True, filters=filters)
    674 
    675 

/usr/lib/python2.7/dist-packages/tables/group.pyc in __init__(self, parentNode, name, title, new, filters, _log)
    274 
    275         # Finally, set up this object as a node.
--> 276         super(Group, self).__init__(parentNode, name, _log)
    277 
    278 

/usr/lib/python2.7/dist-packages/tables/node.pyc in __init__(self, parentNode, name, _log)
    285             # Only new nodes need to be referenced.
    286             # Opened nodes are already known by their parent group.
--> 287             parentNode._g_refNode(self, name, validate)
    288         self._g_setLocation(parentNode, name)
    289 

/usr/lib/python2.7/dist-packages/tables/group.pyc in _g_refNode(self, childNode, childName, validate)
    537         # Check for name validity.
    538         if validate:
--> 539             checkNameValidity(childName)
    540             childNode._g_checkName(childName)
    541 

/usr/lib/python2.7/dist-packages/tables/path.pyc in checkNameValidity(name)
     93     if '/' in name:
     94         raise ValueError( "the ``/`` character is not allowed "
---> 95                           "in object names: %r" % name )
     96 
     97     # Check whether `name` is a valid Python identifier.

ValueError: the ``/`` character is not allowed in object names: 'foo/bar/bah'
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-204-d6e2446b881c> in <module>()
----> 1 store.append('food/orange', df)

/usr/lib/pymodules/python2.7/pandas/io/pytables.pyc in append(self, key, value)
    383         data in the table, so be careful
    384         """
--> 385         self._write_to_group(key, value, table=True, append=True)
    386 
    387     def _write_to_group(self, key, value, table=False, append=False,

/usr/lib/pymodules/python2.7/pandas/io/pytables.pyc in _write_to_group(self, key, value, table, append, comp)
    389         root = self.handle.root
    390         if key not in root._v_children:
--> 391             group = self.handle.createGroup(root, key)
    392         else:
    393             group = getattr(root, key)

/usr/lib/python2.7/dist-packages/tables/file.pyc in createGroup(self, where, name, title, filters, createparents)
    671         _checkfilters(filters)
    672         return Group(parentNode, name,
--> 673                      title=title, new=True, filters=filters)
    674 
    675 

/usr/lib/python2.7/dist-packages/tables/group.pyc in __init__(self, parentNode, name, title, new, filters, _log)
    274 
    275         # Finally, set up this object as a node.
--> 276         super(Group, self).__init__(parentNode, name, _log)
    277 
    278 

/usr/lib/python2.7/dist-packages/tables/node.pyc in __init__(self, parentNode, name, _log)
    285             # Only new nodes need to be referenced.
    286             # Opened nodes are already known by their parent group.
--> 287             parentNode._g_refNode(self, name, validate)
    288         self._g_setLocation(parentNode, name)
    289 

/usr/lib/python2.7/dist-packages/tables/group.pyc in _g_refNode(self, childNode, childName, validate)
    537         # Check for name validity.
    538         if validate:
--> 539             checkNameValidity(childName)
    540             childNode._g_checkName(childName)
    541 

/usr/lib/python2.7/dist-packages/tables/path.pyc in checkNameValidity(name)
     93     if '/' in name:
     94         raise ValueError,4577:0( "the ``/`` character is not allowed "
---> 95                           "in object names: %r" % name )
     96 
     97     # Check whether `name` is a valid Python identifier.

ValueError: the ``/`` character is not allowed in object names: 'food/orange'
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-205-57135c961f29> in <module>()
----> 1 store.append('food/apple',  df)

/usr/lib/pymodules/python2.7/pandas/io/pytables.pyc in append(self, key, value)
    383         data in the table, so be careful
    384         """
--> 385         self._write_to_group(key, value, table=True, append=True)
    386 
    387     def _write_to_group(self, key, value, table=False, append=False,

/usr/lib/pymodules/python2.7/pandas/io/pytables.pyc in _write_to_group(self, key, value, table, append, comp)
    389         root = self.handle.root
    390         if key not in root._v_children:
--> 391             group = self.handle.createGroup(root, key)
    392         else:
    393             group = getattr(root, key)

/usr/lib/python2.7/dist-packages/tables/file.pyc in createGroup(self, where, name, title, filters, createparents)
    671         _checkfilters(filters)
    672         return Group(parentNode, name,
--> 673                      title=title, new=True, filters=filters)
    674 
    675 

/usr/lib/python2.7/dist-packages/tables/group.pyc in __init__(self, parentNode, name, title, new, filters, _log)
    274 
    275         # Finally, set up this object as a node.
--> 276         super(Group, self).__init__(parentNode, name, _log)
    277 
    278 

/usr/lib/python2.7/dist-packages/tables/node.pyc in __init__(self, parentNode, name, _log)
    285             # Only new nodes need to be referenced.
    286             # Opened nodes are already known by their parent group.
--> 287             parentNode._g_refNode(self, name, validate)
    288         self._g_setLocation(parentNode, name)
    289 

/usr/lib/python2.7/dist-packages/tables/group.pyc in _g_refNode(self, childNode, childName, validate)
    537         # Check for name validity.
    538         if validate:
--> 539             checkNameValidity(childName)
    540             childNode._g_checkName(childName)
    541 

/usr/lib/python2.7/dist-packages/tables/path.pyc in checkNameValidity(name)
     93     if '/' in name:
     94         raise ValueError( "the ``/`` character is not allowed "
---> 95                           "in object names: %r" % name )
     96 
     97     # Check whether `name` is a valid Python identifier.

ValueError: the ``/`` character is not allowed in object names: 'food/apple'
---------------------------------------------------------------------------
NoSuchNodeError                           Traceback (most recent call last)
<ipython-input-208-f108aa201737> in <module>()
----> 1 store.remove('food')

/usr/lib/pymodules/python2.7/pandas/io/pytables.pyc in remove(self, key, where)
    362         """
    363         if where is None:
--> 364             self.handle.removeNode(self.handle.root, key, recursive=True)
    365         else:
    366             group = getattr(self.handle.root, key, None)

/usr/lib/python2.7/dist-packages/tables/file.pyc in removeNode(self, where, name, recursive)
   1235             descendants will be completely removed.
   1236         """
-> 1237         obj = self.getNode(where, name=name)
   1238         obj._f_remove(recursive)
   1239 

/usr/lib/python2.7/dist-packages/tables/file.pyc in getNode(self, where, name, classname)
   1098         # Now we have the definitive node path, let us try to get the node.
   1099         if node is None:
-> 1100             node = self._getNode(nodePath)
   1101 
   1102         # Finally, check whether the desired node is an instance

/usr/lib/python2.7/dist-packages/tables/file.pyc in _getNode(self, nodePath)
   1042         # The node has not been found in alive or dead nodes.
   1043         # Open it directly from disk.
-> 1044         node = self.root._g_loadChild(nodePath)
   1045         return node
   1046 

/usr/lib/python2.7/dist-packages/tables/group.pyc in _g_loadChild(self, childName)
   1178             childName = joinPath(self._v_file.rootUEP, childName)
   1179         # Is the node a group or a leaf?
-> 1180         node_type = self._g_checkHasChild(childName)
   1181 
   1182         # Nodes that HDF5 report as H5G_UNKNOWN

/usr/lib/python2.7/dist-packages/tables/group.pyc in _g_checkHasChild(self, n,57:1Bus error
Building HTML failed.
make: *** [doc] Error 1
,58:2program finished with exit code 2
elapsedTime=852.102446
,